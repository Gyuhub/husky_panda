<launch>
  <arg name="robot_namespace" default="/" />
  <arg name="single_arm" default="true" />
  <arg name="enable_ekf" default="true" />
  <arg name="gazebo" default="false" />
  <arg name="controllers" default="franka_state_controller" if="$(arg single_arm)" />
  <arg name="controllers" default="franka_state_controller_1 franka_state_controller_2 franka_gripper_1 franka_gripper_2" unless="$(arg single_arm)" />

  <group ns="$(arg robot_namespace)">
    <include file="$(find husky_panda_description)/launch/description.launch">
      <arg name="single_arm" value="$(arg single_arm)" />
      <arg name="gazebo" value="$(arg gazebo)" />
    </include>
    <group if="$(arg gazebo)">
      <!-- Load controller configuration and parameter -->
      <rosparam command="load" file="$(find husky_panda_control)/config/control.yaml" />
      <rosparam param="wheel_radius_multiplier" ns="husky_velocity_controller" subst_value="True">
            $(optenv HUSKY_WHEEL_MULTIPLIER 1.0)
      </rosparam>
      <group if="$(arg single_arm)">
        <arg name="arm_id" default="panda" />
        <include file="$(find husky_panda_control)/launch/load_param.launch">
          <arg name="arm_id" value="$(arg arm_id)" />
          <arg name="gazebo" value="$(arg gazebo)" />
        </include>
      </group>
      <group unless="$(arg single_arm)">
        <arg name="arm_id_1" default="panda_1" />
        <arg name="arm_id_2" default="panda_2" />
        <include file="$(find husky_panda_control)/launch/load_param.launch">
          <arg name="arm_id" value="$(arg arm_id_1)" />
          <arg name="gazebo" value="$(arg gazebo)" />
        </include>
        <include file="$(find husky_panda_control)/launch/load_param.launch">
          <arg name="arm_id" value="$(arg arm_id_2)" />
          <arg name="gazebo" value="$(arg gazebo)" />
        </include>
      </group>

      <!-- If using gripper -->
      <param name="m_ee" value="0.76" />

      <!-- Spawn controllers -->
      <node name="base_controller_spawner" pkg="controller_manager" type="spawner" args="husky_joint_publisher husky_velocity_controller franka_gripper" />

      <!-- Start EKF for localization -->
      <group if="$(arg enable_ekf)">
        <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
          <rosparam command="load" file="$(find husky_panda_control)/config/localization.yaml" />
        </node>
      </group>

      <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen" />

      <node pkg="twist_mux" type="twist_mux" name="twist_mux">
        <rosparam command="load" file="$(find husky_panda_control)/config/twist_mux.yaml" />
        <remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel" />
      </node>

      <!-- spawns the controller after the robot was put into its initial joint pose -->
      <node pkg="franka_gazebo" type="delayed_controller_spawner.py" name="panda_controller_spawner" respawn="false" output="screen" args="$(arg controllers)" />

      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
      <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher">
        <rosparam param="source_list" file="$(find husky_panda_control)/config/joint_state_single.yaml" if="$(arg single_arm)" />
        <rosparam param="source_list" file="$(find husky_panda_control)/config/joint_state_dual.yaml" unless="$(arg single_arm)" />
        <param name="rate" value="30" />
      </node>
    </group>
    <group unless="$(arg gazebo)">
      <arg name="arm_id" default="panda" />
      <include file="$(find husky_panda_control)/launch/load_param.launch">
        <arg name="arm_id" value="$(arg arm_id)" />
        <arg name="gazebo" value="$(arg gazebo)" />
      </include>

      <arg name="load_gripper" default="true" />

      <!-- <include file="$(find franka_gripper)/launch/franka_gripper.launch" if="$(arg load_gripper)">
        <arg name="robot_ip" value="$(arg robot_ip)" />
      </include>

      <node name="franka_control" pkg="franka_control" type="franka_control_node" output="screen" required="true">
        <rosparam command="load" file="$(find franka_control)/config/franka_control_node.yaml" />
        <param name="robot_ip" value="$(arg robot_ip)" />
      </node> -->

      <node name="state_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="franka_state_controller" />
      <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" />
      <node name="joint_state_publisher" type="joint_state_publisher" pkg="joint_state_publisher" output="screen">
        <rosparam if="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states, franka_gripper/joint_states] </rosparam>
        <rosparam unless="$(arg load_gripper)" param="source_list">[franka_state_controller/joint_states] </rosparam>
        <param name="rate" value="30" />
      </node>
    </group>
  </group>

</launch>
